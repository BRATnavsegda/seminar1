using System;

namespace Seminar2
{
    class Program
    {
//         //9. Напишите программу, которая выводит
// //случайное число из отрезка [10, 99] и показывает
// //наибольшую цифру числа.
// //78 -> 8
// //12-> 2
// //85 -> 8

// Console.WriteLine("Решаем задачу без методов");
// // Немного о логических операторах, которые будут встречаться постоянно (есть разные операторы, тут укажу только 2)

// // && - Условный оператор логического И. Вычисляет логическое И для своих операндов. 
// // Результат операции x && y принимает значение true, если оба оператора x и y имеют значение true. 
// // В противном случае результат будет false. Если x имеет значение false, y не вычисляется.

// // || - Условный оператор логического ИЛИ. Вычисляет логическое ИЛИ для своих операндов. 
// // Результат операции x || y принимает значение true, если хотя бы один из операторов x или y имеет значение true.
// // В противном случае результат будет false. Если x имеет значение true, y не вычисляется.

// // Теперь к задаче
// // В условии у нас отрезок от 10 до 99, потому логично принимать на ввод только десятки
// // Потому сделаем проверку на введенное число

// // Просим ввести число
// Console.WriteLine("Укажите любое положительное число в диапазоне от 10 до 99");
// // Принимаем и проверяем число
// int number = Convert.ToInt32(Console.ReadLine());

// // в этом цикле мы проверяем, соответствует ли ввод условиям:
// // цикл продлжится, пока введенное число меньше 10 ИЛИ больше 100 
// while(number < 10 || number > 99)
// {
//     // Каждый раз просим ввести нужное число
//     Console.WriteLine("Введенное число неверно. Введите число: ");
//     // А тут при каждой итерации переписываем ввод пользователя. Выйдем из цикла, когда получим корректный ввод.
//     number = Convert.ToInt32(Console.ReadLine());
// }

// // Как только получили корректный ввод, вычисляем какая цифра у нас будет больше
// // Для этого сперва получим первую цифру нашего десятка, разделив число на 10 (работаем только с десятками же)
// int num1 = number / 10;

// // Теперь получим значение второй цифры в нашем десятке, тут используем остаток от деления на 10
// // Чтобы получить последнюю цифру в числе - используйте остаток от деления на 10
// int num2 = number % 10;

// // Поскольку нам теперь известны обе цифры в числе, то мы просто их сравним через знакомый if - else
// if(num1 > num2)
// {
//     // Если первая цифра больше второй, скажем, что она больше
//     Console.WriteLine("В числе "+number+" наибольшая цифра "+num1);
// }
// else if(num1 == num2)
// {
//     // Если цифры равны - так и скажем
//     Console.WriteLine("В числе "+number+" цифры равны");
// }
// else
// {
//     // В последнем else мы всегда будем получать цифру num2 больше, потому нет смысла проверять, просто пишем
//     Console.WriteLine("В числе "+number+" наибольшая цифра "+num2);
// }
// // Задача решена. Думаю, есть другие варианты, но мне в голову пришел этот


// //______________________________________________________________________________________________________________________

// // Теперь решим эту задача с помощью метода.
// // Методы или функции чаще всего описывают до приема каких-либо данных для работы, потому пусть наш метод тоже будет тут
// // В описании метода с названием MaxNumber указываем, что он принимает для работы какие-то данные в целочисленном формате (int data)
// // void указываем для определения того, что метод не возвращает значение, т.е. игнорируем return в этой функции

// Console.WriteLine("Вот теперь пошло решение через void метод с названием: MaxNumber");

// void MaxNumber(int data)
// {
//     // Далее реализовываем логику, что выше в задаче
//     int num1 = data / 10;
//     int num2 = data % 10;
//     // Здесь я ввел строковую переменную result с пустым значением. "" - означает, что строка пуста.
//     string result = "";

//     // Если первая цифра больше второй, как и в логике выше, то
//     if(num1 > num2)
//     {
//         // Записываем в нашу переменую строку. Помните, что при такой конструкции: "текст +data+ текст +num1" - кроме текста мы еще и записываем значение переменных
//        result = "В числе "+data+" наибольшая цифра "+num1;
//     }
//     else if(num1 == num2)
//     {
//         // Если цифры равны - также записываем это в наш стринг. Альтернативный вывод значения переменных в строках может выглядеть и так: $"текст {переменная} текст"
//         result = $"В числе {data} цифры равны";
//     }
//     else
//     {
//         // В последнем else применю сразу оба варианта извлечения данных из меременных в строках, они же практически равноценны :)
//         // Предпочтительно использовать какой-то один вариант, но если уж решили таким способом, как ниже, то обязательно 
//         // после использования конструкции +переменная+ до продолжения строки укажите оператор $
//        result = "В числе "+data+ $" наибольшая цифра {num2}, наименьшая же "+num1+ $" в этом числе :)";
//     }
//     // Здесь, собственно, подводим итог нашего решения и выводим в консоль одну из получившихся фраз, через переменную result
//     Console.WriteLine(result);
// }

// // Метод написан, теперь мы готовы пытаться принять какое-то чило
// Console.WriteLine("Укажите любое положительное число в диапазоне от 10 до 99");
// int number1 = Convert.ToInt32(Console.ReadLine());

// // Вообще, заморочка с вайл не обязательна, но проще же работать с корректными данными, так?
// // Я тут не обрабатываю все ошибки ввода, только целые положительные числа
// while(number1 < 10 || number1 > 99)
// {
//     Console.WriteLine("Введенное число неверно. Введите число: ");
//     number1 = Convert.ToInt32(Console.ReadLine());
// }

// // Все, есть корректные данные, применяем метод
// // Просто пишем название метода, а вместо data указываем переменную, данные которой нам надо рассчитать

// MaxNumber(number1);
// // Счатье :)

// //______________________________________________________________________________________________________________________

// Console.WriteLine("А теперь решение через метод с названием: WhatIsGreater - а что же больше?");
// // Теперь таже задача, но без void и немного иначе в теле метода. Назову метод тоже иначе.
// // И пусть метод возвращает строку, у нас там же Console.WriteLine, а принимает на вход Integer - целое число
// string WhatIsGreater(int some_number)
// {
//     // Тут все так же, только никаких строковых переменных
//     int num1 = some_number / 10;
//     int num2 = some_number % 10;

//     // var щзначает, что переменной result1 будет установлен тип, который система выберет сама
//     var result1 = "";

//     // В условиях таже логика, ничего не менял, только все записываю в переменную result1
//     if(num1 > num2)
//     {
//         result1 = "В числе "+some_number+" наибольшая цифра "+num1;
//     }
//     else if(num1 == num2)
//     {
//         result1 = "В числе "+some_number+" цифры равны";
//     }
//     else
//     {
//         result1 = "В числе "+some_number+" наибольшая цифра "+num2;
//     }
//     // Здесь, собственно, подводим итог нашего решения и выводим наш result1
//     return result1;
// }

// // Метод готов, теперь получим что-то на ввод и орбработаем, как и во всех примерах до
// Console.WriteLine("Укажите любое положительное число в диапазоне от 10 до 99");
// int number2 = Convert.ToInt32(Console.ReadLine());

// while(number2 < 10 || number2 > 99)
// {
//     Console.WriteLine("Введенное число неверно. Введите число: ");
//     number2 = Convert.ToInt32(Console.ReadLine());
// }

// // Применим метод, записав обработанное с его помощью в переменную и выведем результат
// string some_text = WhatIsGreater(number2);
// Console.WriteLine(some_text);

// 11. Напишите программу, которая выводит случайное трёхзначное число 
// и удаляет вторую цифру этого числа.

// Вот тут я наверное напишу, как сделать ввод совсем корректнеым, что б мы получали только трехзначное число и не было других ошибок (иных цифр, пробелов, пустых вводов, букв и т.д.)
// Вообще, можно как бы сделать так - int number = new Random().Next(100, 1000); и у нас будет рандомное число
// Но сделаю с вводом

// здесь зацикленный while, т.е. while(true) - бесконечный цикл.
// оборвется он только тогда, когда try будет удачным
// int number;
// while(true){
//     // Принимаем на ввод число и проверяем, точно ли тут число? Например, могут ввести букву или, не вводя ничего, нажать Enter
//     // Пытаемся сделать следующее, буквально try - пытаемся
//     try{
//         Console.Write("Укажите любое целое трехзначное положительное число: ");
//         number = Convert.ToInt32(Console.ReadLine());
//         // Если у нас число, то проверим положительное ли оно и трехзначное ли
//         if(number >= 100 && number < 1000)
//         {
//             //выйдем из цикла если условие верно
//             break;
//         }
//         else
//         {
//             // У нас тут число но не трехзначное, сообщим об этом
//             Console.WriteLine("Число не положителное или не трехзначное.");
//         }
//         // если попытка записать число не удалась, у нас возникает ошибка ввода (прям во всех случаях ввода чего-то, отличного от целого числа со знаком
//         // отлавливаем эту ошибку через catch, буквально catch - поймать
//         // в скобочках указываем, что именно мы ловим - FormatException.
//         // FormatException – некорректный формат операнда или аргумента. Именно он и будет у нас возникать при вводе чего-угодно, кроме целого числа
//     }catch (FormatException){
//         // сообщаем пользователю, что у нас ошибка и просим ввести число
//         // т.е. опять прыгаем в try
//         // и будем туда прыгать, пока не получим на вводе число
//         Console.WriteLine("Ошибка ввода. Введите целое положительное трехзначное число");
//     }
// }

// // Теперь у нас есть нужное число, начнем решать задачу

// // Объявим переменную result, в которую запишем наши вычисления
// // Можно сделать одной строкой, как на семинаре показывал Габиль
// int result = ((number / 100) * 10 + number % 10);
// Console.WriteLine($"Если у числа {number} удалим вторую цифру, получим {result}");

// // А можно разбить на несколько переменных, и с каждой из них произвести необходимые действия

// // Вот тут мы наше число разделили на 100 и получили первую цифру
// // Но т.к. удалив вторую цифру из нашего трехзнака мы получим двузнак, полученную первую цифру нужно умножить на 10
// int num1 = (number / 100) * 10;

// // Тут получим последнюю цифру трехзнака. Просто число поделим на 10 с остатком
// int num2 = number % 10;

// // Теперь еще одна переменная, где мы сложим два получившихмя значения
// int sum = num1 + num2;

// // Покажем результат в консоли
// Console.WriteLine($"Число {number} без цифры в серединке - это {sum}");

// // Теперь метод
// void Number(int data)
// {
//     // Объявляем ту же логику, что и в задаче, только вместо number поставим тот агрумент, который принимаем на вход - data (можно обозвать как угодно)
//     int some_num1 = (data / 100) * 10;
//     int some_num2 = data % 10;
//     int some_sum = num1 + num2;
//     Console.WriteLine("А это вернется из метода с void: "+some_sum);
// }

// // Используем метод
// Number(number);

// // Теерь метод без void
// int Last_Metod(int data)
// {
//     int summa = ((data / 100) * 10 + data % 10);
//     return summa;
// }

// // Используем метод
// int summa = Last_Metod(number);
// Console.WriteLine($"Вот это вернет метод без Void {summa}");

// 12. Напишите программу, которая будет принимать на вход два числа и 
// выводить, является ли второе число кратным первому. Если число 2 не кратно числу 1, 
// то программа выводит остаток от деления.

// Сначала примем и проверим первое число, не будем рассчитывать это для отрицательных чисел, только для положительных и 0

// кому не даются првоерки или не нужны, используйте int number1 = Convert.ToInt32(Console.ReadLine()); и Console.WriteLine("Введите первое чсило: ");
// а также закомментируйте циклы
// int number1, number2;

// // В цикле будем проверять ввод, пока он не будет верным
// while(true){
//     Console.Write("Введите первое целое число: ");
//     // Вот тут объявлем строковую перемнную strNumber, куда пишем ввод пользователя
//     string? consoleStr = Console.ReadLine();
//     // а здесь вместо try - catch знакомые уже if - else
//     // int.TryParse - метод, преобразующий строковое представление числа в эквивалентное ему 32-битовое целое число со знаком. 
//     // Возвращает значение, указывающее, успешно ли выполнена операция. Т.е. тут работает Булева логика
//     // если преобразование прошло успешно - тогда вренется true и значение будет записано в переменную number
//     // если преобразование не успешно - получим false и в переменную number записано ничего не будет
//     // Если TryParse успешен, значит в number1 у нас целое число, но мы не знает с каким знаком
//     if(int.TryParse(consoleStr, out number1)){
//         if(number1 >= 0)
//         {
//             // если в number1 число больше 0 - завершаем цикл через break
//             break;
//         }
//         else
//         {
//             // если полученное число меньше 0 - цикл продолжим и скажем, что есть число, но не положительное
//             Console.WriteLine("Число отрицательное. Введите положительное число.");
//         }
//     }
//     else{
//         // если TryParse вернул false - продолжаем цикл
//         Console.WriteLine("Неверный формат ввода. Введите число");
//     }
// }

// // То же самое делаем для вторго числа. Обратите внимание - в рамках цикла используется одинаковая переменная string consoleStr.
// // Но поскольку она объявлена только в пределах цикла, только там она и вычисляется. Как завершается цикл - переменная очищается
// // А переменные int number1, number2; объявлены за пределами цикла и в циклах мы в них что-то пишем. По завершении в них останется значение
// while(true){
//     Console.Write("Введите второе целое число: ");
//     // Вот тут объявлем строковую перемнную strNumber, куда пишем ввод пользователя
//     string? consoleStr = Console.ReadLine();
//     // а здесь вместо try - catch знакомые уже if - else
//     // int.TryParse - метод, преобразующий строковое представление числа в эквивалентное ему 32-битовое целое число со знаком. 
//     // Возвращает значение, указывающее, успешно ли выполнена операция. Т.е. тут работает Булева логика
//     // если преобразование прошло успешно - тогда вренется true и значение будет записано в переменную number
//     // если преобразование не успешно - получим false и в переменную number записано ничего не будет
//     // Если TryParse успешен, значит в number1 у нас целое число, но мы не знает с каким знаком
//     if(int.TryParse(consoleStr, out number2)){
//         if(number2 >= 0)
//         {
//             // если в number1 число больше 0 - завершаем цикл через break
//             break;
//         }
//         else
//         {
//             // если полученное число меньше 0 - цикл продолжим и скажем, что есть число, но не положительное
//             Console.WriteLine("Число отрицательное. Введите положительное число.");
//         }
//     }
//     else{
//         // если TryParse вернул false - продолжаем цикл
//         Console.WriteLine("Неверный формат ввода. Введите число");
//     }
// }

// // Получили оба числа для решения задачи
// // Проыверим на кратность второе число. Кратное число – это число, делящееся на целое число без остатка.
// // Некоторый подвох в задаче - первое число должно быть меньше, т.к. оно в логике выступает в роли делителя

// if(number2 % number1 == 0)
// {
//     //Если поделили бкз остатка
//     Console.WriteLine($"Число {number2} кратное {number1}");
// }
// else
// {
//     // Иначе число не кратно, выводим остаток
//     // ну и сделаем переменную, куда запишем остаток
//     int result =  number2 % number1;
//     Console.WriteLine($"Число {number2} не кратное {number1}, остаток {result}");
// }

// // теперь метод, который на вход принимает каких-то два агрумента типа int (работаем то с 2-мя числами) и возвращает строку (string)

// string ResultDivision (int arg1, int arg2)
// {
//     // присваиваем агрументам числа, которые ввели
//     arg1 = number1;
//     arg2 = number2;
//     // объявляем стркоовую переменную, куда запишем результат
//     string res;

//     if(arg2 % arg1 == 0)
//     {
//         // в res пишем строку с переданными значениями переменных
//         res = $"Число {arg2} кратное {arg1}";
//     }
//     else
//     {
//         int result =  arg2 % arg1;
//         // в res пишем строку с переданными значениями переменных с учетом остатка
//         res = $"Число {arg2} не кратное {arg1}, остаток {result}";
//     }
//     // Выводи все в ретурн
//     return res;
// }
// // Результат метода можно извлечь сразу в консоль - ниже пример вывода метода в консоль
// Console.WriteLine($"{ResultDivision(number1, number2)} - это результат метода");

        // static void Main(string[] args)
        // {
        //     MaxNumber2();
        // }

        // 9. Напишите программу, кторая выводит случайное число из отрезка (10, 999)
        // и показывает наибольшую цифру числа.

        // static void MaxNumber2()
        // {
        //     int number = new Random().Next(10, 100);
        //     int number1 = number % 10;
        //     int number2 = number / 10;

        //     int max = number1;

        //     if (number1 < number2)
        //     {
        //         max = number2;
        //     }
        //     System.Console.WriteLine($"Max {max}");

        // int number1 = new Random().Next(10, 1000);

        // int max = 0;

        // int iterator = number1;
        // while (iterator !=0)
        // {
        //     int number2 = iterator % 10;
        // }

// // 14. Напишите программу, которая принимает на
// // вход число и проверяет, кратно ли оно
// // одновременно 7 и 23.
// // 14 -> нет
// // 46 -> нет
// // 161 -> да

// // ну, по условию выходит, что у нас известны 2 числа - 7 и 23, на них мы должны поделить наш ввод
// // получим какой-то ввод, я опять же заморочусь с проверками, меня сильно раздражает ошибка ввода. Видимо что-то на генном уровне :)
// // тут сделаю еще интереснее, я зациклю программу, что б мы могли писать числа и получать результаты, пока не напишем ключ-фразу

// // тогда объявляем две переменные, input - туда будем писать ввод пользователя и end - наша ключ-фраза (в нижнем регистре)
// string? end = "конец", input = "";

// // теперь цикл, который будет работать, пока input не равен end. Input тоже приведем к нижнему регистру
// while( input?.ToLower() != end)
// {
//     // объявляем переменную с целочисленным типом
//     int number;

//     // В этом цикле, как и прежде, проверяем число. А пусть это будет теперь вообще любое целое число с любым знаком
//     while(true){
//         // просим ввести число
//         Console.Write("Укажите какое-нибудь целое число: ");
//         // пишем ввод в строковую переменную
//         string? str = Console.ReadLine();
//         // пытаемся преобразовать строку в число
//         if(int.TryParse(str, out number)){
//             // если успешно, то у нас есть целое число с любым знаком. Выходим из цикла.
//             break;
//         }else{
//             // если не успешно - продолжаем цикл
//             Console.WriteLine("Неверный формат ввода. Введите число");
//         }
//     }
    
//     // Теперь есть какое-то число, записанное в рамках while( input.ToLower() != end)
//     // Теперь укажем переменные, в которые запишем 7 и 23.
//     int num1 = 7, num2 = 23;

//     // Теперь поделим наш number (введенное число) на переменные num1 и num2, лучше через несколько действий
//     // Для этого инициализируем еще несколько переменных, куда запишем результаты действий
//     int res1 = number / num1;
//     int res2 = number / num2;

//     // если результат деления res1 равен числу num2 И результат деления res2 равен num1, то нашли общее кратное
//     if(res1 == num2 && res2 == num1)
//     {
//         Console.WriteLine($"Число {number} кратно {num1} и {num2}");
//     }
//     else
//     {
//         Console.WriteLine($"Число {number} не кратно {num1} и {num2}");
//     }

//     // Также можем найти наименьшее общее кратное перемножив num1 и num2 и сравнив сумму с number
//     int sum = num1 * num2;
//     if(sum == number)
//     {
//         Console.WriteLine($"Число {number} кратно {num1} и {num2} в другом примере");
//     }
//     else
//     {
//         Console.WriteLine($"Число {number} не кратно {num1} и {num2} в другом примере");
//     }

//     // Теперь с помощью метода решим эту задачу. Опишем метод
//     int FindNumber(int data)
//     {
//         // В этот раз я верну int, а не стринг. Метод будет только делать какие-то вычисления
//         // Объявим аргументы для вычислений
//         // int num1 = 7, num2 = 23; - в методе эту строчку сейчас можем не описывать, т.к. переменные number, num1 и num2
//         // были уже инициализированы выше, за пределами этого метода
//         if(number / num1 == num2 && number / num2 == num1)
//         {
//             // чтобы вернуть число, если уравнение выше выполняется - пишем 1 (нашли кратное)
//             return 1;
//         }
//         else
//         {
//             // Тут уравнение не выполнилось - не кратное, пишем 0
//             return 0;
//         }
//     }
//     // Применяем метод через условие, если вернулась 1 - значит кратное есть, выводим сообщение
//     if (FindNumber(number) == 1)
//     {
//         Console.WriteLine($"Число {number} кратно {num1} и {num2} - это метод");
//     }
//     // Если вернулся ноль - значит не кратное, тоже выводим это сообщение
//     else{
//         Console.WriteLine($"Число {number} не кратно {num1} и {num2} - это метод");
//     }

//     // Вот этот кусочек кода отвечает за самый верхний цикл. После отработки всех логик и методов, мы можем перестать вводить что-то
//     // И написать слово "конец" (в разном регистре), а можем нажать Enter и будем писать числа дальше.
//     Console.WriteLine("Если хотите закончить вводить числа, напишите - Конец. А для продолжения - нажмите Enter");
//     input = Console.ReadLine();
// }

// // 16. Напишите программу, которая принимает на
// // вход два числа и проверяет, является ли одно
// // число квадратом другого.
// // 5, 25 -> да
// // -4, 16 -> да
// // 25, 5 -> да
// // 8,9 -> нет


// // Получилось напсать метод на проверку ввода целого числа. Всю логику перенес в метод и это работает
// // Метод принимает на вход некую строку - ввод из консоли и возвращает целое число с любым знаком
// int EnterInput (string? data)
// {
//     // Объявил перемнную стринг внутри цикла, куда записываю ползовательсктй ввод - наверное лишняя
//     string? arg = data;
//     // здесь инициализация перменной, куда запишется преобразованное из строки число
//     int number;
//     while(true)
//     {   
//         // Пытаемся преобразовать
//         if(int.TryParse(arg, out number))
//         {
//             // Если вышло - покажем, какое число записано и выйдем из цикла
//             Console.WriteLine($"Получено число {number}");
//             break;
//         }
//         else
//         {
//             // Если не получилось - напишем об ошибке и попросим указать число в консоли, перепишем аrg
//             Console.WriteLine("Ошибка ввода. Введите целое число.");
//             arg = Console.ReadLine();
//         }
//     }
//     // Вернем число
//     return number;
// }

// // Это метод для вычисления квадрата, который принимает на вход два числа (int) и возвращает булево
// bool SqureNumber(int data1, int data2)
// {
//     // Даже не инициализировал внутренних переменных
//     // Просто проверяем: если первое число в квадрате равно второму ИЛИ второе в кадрате равно первому
//     // Тогда вернем истину - true
//     if(Math.Pow(data1, 2) == data2 || Math.Pow(data2, 2) == data1)
//     {
//         return true;
//     }
//     // Если условие не выполнилось - оба опарнда у нас false, вернем ложь - false
//     else
//     {
//         return false;
//     }
// }

// // Здесь переменные для цикла ниже и ключ-фраза для его прерывания
// string? end = "стоп", input = "";

// // Циклим по условию и вводим числа, пока не надоест. Как только напишем в консоли "стоп" - программа завершится
// while(end != input?.ToLower())
// {
//     // Инициализируем перменные для введенных чисел
//     int num1, num2;

//     // Просим ввести первое число
//     Console.WriteLine("Укажите первое целое число:");

//     // Принименяем метод проверки ввода для ввода с консоли, и записываем в переменную
//     num1 = EnterInput(Console.ReadLine());

//     // То же самое для второго числа
//     Console.WriteLine("Укажите второе целое число:");
//     num2 = EnterInput(Console.ReadLine());

//     // Применяем результат метода по проверке квадрата
//     if (SqureNumber(num1, num2) == true)
//     {
//         // Если вернулась истина, значит квадрат есть.
//         Console.WriteLine($"Среди чисел {num1} и {num2} есть квадрат.");
//     }
//     else{
//         // А если ложь, тогда квадрата нет.
//         Console.WriteLine($"Среди чисел {num1} и {num2} нет квадрата.");
//     }

//     // Тут спрашиваем, будем ли еще писать и проверять квадрат
//     Console.WriteLine("Продолжаем или стоп?");
//     // Принимаем ответ от пользователя
//     input = Console.ReadLine();


        //   11. Напишите программу, которая выводит случайное трёхзначное число
        // и удаляет вторую цифру этого числа.

        static void Main(string[] args)
        {
            SecondNumber();
        }
        static void SecondNumber()
        {
            int number = new Random().Next(100, 1000);
            int result = (number / 100 * 10) + (number % 10);
            System.Console.WriteLine($"Number={number}; result = {result}");

        }
    }
}